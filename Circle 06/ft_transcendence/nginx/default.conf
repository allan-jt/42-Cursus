   map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
   }

	upstream be {
		server backend:BE_PORT;
	}
	
	server {
			listen 80;
			server_name 'HOST_URL';

			root /var/www/html/build;
			index index.html;

			location / {
					add_header 'Access-Control-Allow-Origin' $http_host;
					add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
					add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
					add_header 'Access-Control-Allow-Credentials' 'true';

					# Reverse proxy for HTTP traffic
					proxy_pass http://frontend:FE_PORT;
					proxy_set_header Host $host;
					proxy_set_header X-Real-IP $remote_addr;
					proxy_set_header Upgrade $http_upgrade;
					proxy_set_header Connection "upgrade";
			}

			location /api {
					add_header 'Access-Control-Allow-Origin' $http_host;
					add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
					add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
					add_header 'Access-Control-Allow-Credentials' 'true';

					# Reverse proxy for HTTP traffic
					proxy_pass http://be/api;
					proxy_set_header Host $host;
					proxy_set_header X-Real-IP $remote_addr;
					proxy_set_header Upgrade $http_upgrade;
					proxy_set_header Connection "upgrade";
			}

			location /socket.io {
					add_header 'Access-Control-Allow-Origin' $http_host;
					add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
					add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
					add_header 'Access-Control-Allow-Credentials' 'true';

					# Reverse proxy for WebSocket traffic
					proxy_pass http://be/api/socket.io;
					proxy_set_header Host $host;
					proxy_set_header X-Real-IP $remote_addr;
					proxy_set_header Upgrade $http_upgrade;
					proxy_set_header Connection "upgrade";
			}
	}

	server {
			listen 80 default_server;
			root /var/www/html/build;

			location / {
					return 302 'http://HOST_URL';
			}
	}

	server {
			listen FE_PORT;
			server_name 'HOST_URL';
			root /var/www/html/build;
			index index.html;

			location / {
					return 302 'http://HOST_URL';
			}

			location /ws {
				add_header 'Access-Control-Allow-Origin' $http_host;
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
				add_header 'Access-Control-Allow-Credentials' 'true';

				# Reverse proxy for WebSocket traffic
				proxy_pass http://frontend:FE_PORT;
				proxy_http_version 1.1;
				proxy_set_header Host $host;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
    		}
	}